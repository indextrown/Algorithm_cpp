#include <iostream>
#include <algorithm>
using namespace std;

// 순서 상관없이 7개랄 뽑는다 = 9C7인데 이 합이 => 100   -> 순서와 상관 없이 뽑기
// 처음 풀이방법: 9P7로 뽑을 수도 이음                  -> 순서와 상관 있이 뽑기
// n이 작아서 nPr도 사용 가능
// 9P7 = 9!/2! = 18만 => 1000만보다 작아서 작은 수로 생각해도됨
// 순열을 할때는 항상 오름차순 정렬

// 9C7 = 9C2
// 정상적인 일곱난쟁이 7게 뽑는 것과 비정상적인 일곱난쟁이 2개를 뽑는 거는 같음
// 정상적인 일곱난쟁이 7게의 합을 구해 100만들거나
// 모든 일곱난쟁이에서 비정상적인 2개를 빼서 100을 만드는거는 같음 



// 순서 상관없이 7개랄 뽑는다 = 9C7인데 이 합이 => 100   -> 순서와 상관 없이 뽑기
// 처음 풀이방법: 9P7로 뽑을 수도 이음                  -> 순서와 상관 있이 뽑기
// n이 작아서 nPr도 사용 가능
// 9P7 = 9!/2! = 18만 => 1000만보다 작아서 작은 수로 생각해도됨
// 순열을 할때는 항상 오름차순 정렬

// 9C7 = 9C2
// 정상적인 일곱난쟁이 7게 뽑는 것과 비정상적인 일곱난쟁이 2개를 뽑는 거는 같음
// 정상적인 일곱난쟁이 7게의 합을 구해 100만들거나
// 모든 일곱난쟁이에서 비정상적인 2개를 빼서 100을 만드는거는 같음 


// a+b+c+d+e+f+g = 100  9C7
// 100 = all -a -b      9c2

int main()
{
    int arr[9];
    int sum=0;
    for (int i; i<9; i++)
    {
        cin >> arr[i];
    }
    sort(arr, arr+9);

    do
    {
        for(int i=0; i<7; i++) sum += arr[i];
        if (sum == 100) break;
    } while (next_permutation(arr, arr+9));
    

    for (int i=0; i<9; i++)
    {
        cout << arr[i] << "\n";
    }
    return 0;
}